# Generated by Django 5.2.5 on 2025-08-17 00:40

from django.db import migrations


def add_missing_columns(apps, schema_editor):
    """Agregar columnas faltantes a la tabla RP si no existen"""
    db_alias = schema_editor.connection.alias
    with schema_editor.connection.cursor() as cursor:
        # Verificar si la columna numero_rp existe
        cursor.execute("PRAGMA table_info(gestion_usuarios_rp)")
        columns = [row[1] for row in cursor.fetchall()]
        
        # Lista de columnas que deberían existir
        required_columns = [
            ('numero_rp', 'VARCHAR(50) UNIQUE'),
            ('numero_contrato', 'VARCHAR(50)'),
            ('tipo_contrato', 'VARCHAR(100)'),
            ('duracion', 'VARCHAR(100)'),
            ('fecha_inicio', 'DATE'),
            ('fecha_final', 'DATE'),
            ('objeto', 'TEXT'),
            ('fecha_rp', 'DATE'),
            ('fecha_suscripcion', 'DATE'),
            ('valor', 'DECIMAL(15, 2)'),
            ('fecha_creacion', 'DATETIME'),
            ('fecha_actualizacion', 'DATETIME'),
            ('archivo', 'VARCHAR(100)')
        ]
        
        # Agregar columnas faltantes
        for column_name, column_type in required_columns:
            if column_name not in columns:
                try:
                    cursor.execute(f"ALTER TABLE gestion_usuarios_rp ADD COLUMN {column_name} {column_type}")
                except Exception as e:
                    print(f"Error agregando columna {column_name}: {e}")


def reverse_add_missing_columns(apps, schema_editor):
    """Función de reversa - no hacer nada"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('gestion_usuarios', '0003_rp_usuario_firma_documento_planilla_delete_contrato'),
    ]

    operations = [
        migrations.RunPython(add_missing_columns, reverse_add_missing_columns),
    ]
